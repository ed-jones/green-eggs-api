version: "3.8"

services:
  apollo:
    image: mcr.microsoft.com/azure-functions/node:3.0-node14
    ports:
      - 8080:80
    working_dir: /home/site/wwwroot
    volumes:
      - ./:/home/site/wwwroot
    depends_on:
      postgres:
        condition: service_healthy
      build:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://prisma:secret@postgres:5432/green_eggs?schema=public
      SECRET: APp8@oTKCcpgso
      AZURE_FUNCTIONS_ENVIRONMENT: Development
      AZUREFUNCTIONSJOBHOST__LOGGING__CONSOLE__ISENABLED: "true"
  prisma:
    image: node:14.17.0-alpine3.10
    command: yarn prisma studio
    ports:
      - 5555:5555
    working_dir: /app
    volumes:
      - ./:/app
    depends_on:
      postgres:
        condition: service_healthy
      build:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://prisma:secret@postgres:5432/green_eggs?schema=public
  build:
    image: node:14.17.0-alpine3.10
    command: yarn watch
    working_dir: /app
    volumes:
      - ./:/app
    depends_on:
      install:
        condition: service_completed_successfully
    environment:
      DATABASE_URL: postgresql://prisma:secret@postgres:5432/green_eggs?schema=public
    healthcheck:
      test: ["CMD-SHELL", "yarn prisma"]
      interval: 10s
      timeout: 5s
      retries: 5
  install:
    image: node:14.17.0-alpine3.10
    command: yarn install
    working_dir: /app
    volumes:
      - ./:/app
    healthcheck:
      test: ["CMD-SHELL", "yarn prisma"]
      interval: 10s
      timeout: 5s
      retries: 5
  postgres:
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d green_eggs -U prisma"]
      interval: 10s
      timeout: 5s
      retries: 5
    image: postgres:13.1
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: prisma
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: green_eggs
    ports:
      - 5433:5432

volumes:
  postgres:
