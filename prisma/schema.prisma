// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Recipe {
  id             String          @id @default(uuid())
  title          String
  description    String
  submittedBy    User            @relation("submittedRecipes", fields: [userId], references: [id])
  userId         String
  submittedById  String
  commentCount   Int             @default(0)
  likeCount      Int             @default(0)
  createdAt      DateTime        @default(now())
  servingCount   Int
  timeEstimate   DateTime
  previewURI     String
  recipeSteps    RecipeStep[]
  ingredients    Ingredient[]
  recipeComments RecipeComment[]
  likedBy        User[]          @relation("likedRecipes")
  visibility     Privacy         @default(PRIVATE)
  commentability Privacy         @default(PRIVATE)
  likeability    Privacy         @default(PRIVATE)
}

enum Privacy {
  PRIVATE
  FRIENDS
  PUBLIC
}

model RecipeCategories {
  id        String  @id @default(uuid())
  breakfast Boolean
  lunch     Boolean
  dinner    Boolean
  soup      Boolean
  salad     Boolean
  dessert   Boolean
  curry     Boolean
}

model RecipeDiets {
  id                String  @id @default(uuid())
  isSpicy           Boolean @default(false)
  isHealthy         Boolean @default(false)
  isVegetarian      Boolean @default(false)
  isVegan           Boolean @default(false)
  isPescetarian     Boolean @default(false)
  isKeto            Boolean @default(false)
  isGlutenFree      Boolean @default(false)
  isPaleo           Boolean @default(false)
  isSugarFree       Boolean @default(false)
  isDairyFree       Boolean @default(false)
  isLowFODMAP       Boolean @default(false)
  isHalal           Boolean @default(false)
  isKosher          Boolean @default(false)
  isLactoVegetarian Boolean @default(false)
}

model RecipeAllergens {
  id                String  @id @default(uuid())
  containsMilk      Boolean
  containsEggs      Boolean
  containsTreeNuts  Boolean
  containsPeanuts   Boolean
  containsShellfish Boolean
  containsWheat     Boolean
  containsSoy       Boolean
  containsFish      Boolean
}

model RecipeStep {
  id          String @id @default(uuid())
  recipe      Recipe @relation(fields: [recipeId], references: [id])
  recipeId    String
  imageURI    String
  title       String
  description String
}

model RecipeComment {
  id       String @id @default(uuid())
  author   User   @relation(fields: [userId], references: [id])
  userId   String
  recipe   Recipe @relation(fields: [recipeId], references: [id])
  recipeId String
  contents String
  likedBy  User[] @relation("likedComments")
}

model Ingredient {
  id       String @id @default(uuid())
  name     String
  quantity String
  recipes  Recipe @relation(fields: [recipeId], references: [id])
  recipeId String
}

model User {
  id               String          @id @default(uuid())
  firstName        String
  lastName         String
  email            String          @unique
  avatarURI        String?
  likedRecipes     Recipe[]        @relation("likedRecipes")
  recipeComments   RecipeComment[]
  submittedRecipes Recipe[]        @relation("submittedRecipes")
  verified         Boolean         @default(false)
  likedCommemts    RecipeComment[] @relation("likedComments")
}
