type FullUser {
  id: String!
  firstName: String!
  lastName: String!
  bio: String
  email: String!
  avatarURI: String
  verified: Boolean!
  visibility: Privacy!
  dietaryPreferences: [Diet!]!
  allergyPreferences: [Allergy!]!
  isFollowing: Boolean
  followingCount: Int!
  followerCount: Int!
  likeCount: Int!
  recipeCount: Int!
}

type User {
  id: String!
  firstName: String!
  lastName: String!
  bio: String
  email: String!
  avatarURI: String
  verified: Boolean!
  visibility: Privacy!
}

type PrivateUser {
  id: String!
  visibility: Privacy!
}

input UserInput {
  firstName: String!
  lastName: String!
  email: String!
  avatarURI: String
}

union FullUserUnion = FullUser | PrivateUser
union UserUnion = User | PrivateUser

type UserResult {
  data: UserUnion
  error: Error
}

type MeResult {
  data: FullUser
  error: Error
}

type FullUserResult {
  data: FullUserUnion
  error: Error
}

type UsersResult {
  data: [UserUnion!]
  error: Error
}

type FullUsersResult {
  data: [FullUserUnion!]
  error: Error
}

type FollowUserResult {
  data: User
  error: Error
}

type UnfollowUserResult {
  data: User
  error: Error
}
